import java_cup.runtime.*;

terminal IMPORT;
terminal JAVA;
terminal CLASS;
terminal STATIC;
terminal RETURN;
terminal PUBLIC;
terminal NEW;
terminal INT;
terminal SCANNER;
terminal IN;
terminal SYSTEM;
terminal VOID;
terminal MAIN;
terminal STRING;
terminal ARGS;
terminal BOOLEAN;
terminal IF;
terminal ELSE;
terminal WHILE;
terminal OUT;
terminal PRINTLN;
terminal NEXTINT;
terminal TRUE;
terminal FALSE;
terminal THIS;
terminal NE, LE, GE, LT, GT;
terminal AND, OR, NOT;
terminal COMMENT;
terminal EQ;
terminal SEMICOLON;
terminal LCURLBRACKET, RCURLBRACKET, LSQRBRACKET, RSQRBRACKET, LPAREN, RPAREN;
terminal ASSIGN;
terminal PERIOD;
terminal COMMA;
terminal PLUS, MINUS, TIMES, DIVIDE;
terminal ID;
terminal INTEGER;
terminal UTIL;
terminal ASTERISK;

non terminal program;
non terminal class_definition;
non terminal member_list;
non terminal member_declaration;
non terminal member_declarator;
non terminal function_definition;
non terminal function_declaration;
non terminal variable_declaration;
non terminal main_declaration;
non terminal type;
non terminal argument_declaration_list;
non terminal argument_declaration;
non terminal compound_statement;
non terminal statement_list;
non terminal statement;
non terminal assignment_statement;
non terminal expression;
non terminal expression_list;
non terminal term;
non terminal primary_expression;
non terminal object;
non terminal variable;
non terminal function_call;
non terminal class_definitionList;
non terminal classId;
non terminal member_listList;
non terminal member_declarationList;
non terminal staticOption;
non terminal variable_declarationList;
non terminal statement_listOption;
non terminal return_expressionOption;
non terminal functionId;
non terminal argument_declaration_listOption;
non terminal argument_declaration_listList;
non terminal objectId;
non terminal objectIdOption;
non terminal sqBracketList;
non terminal main_declarationOption;
non terminal argument_declarationList;
non terminal statementList;
non terminal else_statementOption;
non terminal binary_operator;
non terminal expression_listList;
non terminal unary_operator;
non terminal objectOption;
non terminal expressionListOption;


start with program;

program ::= IMPORT JAVA PERIOD UTIL PERIOD ASTERISK SEMICOLON class_definitionList ;

class_definitionList ::= class_definition class_definitionList | ;

class_definition ::= CLASS classId LCURLBRACKET member_listList RCURLBRACKET ;

member_listList ::= member_list member_listList | ;

member_list ::= member_declaration member_declarationList ;

member_declarationList ::= member_declaration member_declarationList | ;

member_declaration ::= member_declarator SEMICOLON | function_definition ;

member_declarator ::= staticOption variable_declaration;

staticOption ::= STATIC | ;

function_definition ::= function_declaration
                        LCURLBRACKET variable_declarationList
                        statement_listOption
                        return_expressionOption RCURLBRACKET ;

variable_declarationList ::= variable_declaration variable_declarationList SEMICOLON | ;

statement_listOption ::= statement_list | ;

return_expressionOption ::= RETURN expression SEMICOLON | ;

function_declaration ::= PUBLIC staticOption type functionId argument_declaration_listOption |
                         main_declaration ;

argument_declaration_listOption ::= argument_declaration_listList ;

argument_declaration_listList ::= argument_declaration_list argument_declaration_listList | ;

variable_declaration ::= type objectId objectIdOption ;

objectIdOption ::= sqBracketList ASSIGN NEW INT LSQRBRACKET INTEGER RSQRBRACKET sqBracketList | ;

sqBracketList ::= LSQRBRACKET RSQRBRACKET sqBracketList |
                  LSQRBRACKET INTEGER RSQRBRACKET sqBracketList | ;

main_declaration ::= main_declarationOption
                     PUBLIC STATIC VOID MAIN
                     LPAREN STRING ARGS LSQRBRACKET RSQRBRACKET RPAREN ;

main_declarationOption ::= STATIC SCANNER IN ASSIGN
                           NEW SCANNER
                           LPAREN SYSTEM PERIOD IN RPAREN SEMICOLON | ;

type ::= classId | INT | BOOLEAN ;

argument_declaration_list ::= argument_declaration argument_declarationList ;

argument_declarationList ::= COMMA argument_declaration argument_declarationList | ;

argument_declaration ::= type objectId sqBracketList ;

compound_statement ::= LCURLBRACKET statement_list RCURLBRACKET ;

statement_list ::= statement statementList ;

statementList ::= statement statementList | ;

statement ::=  compound_statement
               | assignment_statement SEMICOLON
               | IF LPAREN expression RPAREN statement else_statementOption
               | WHILE LPAREN expression RPAREN statement
               | SYSTEM PERIOD OUT PERIOD PRINTLN LPAREN expression RPAREN ;

else_statementOption ::= ELSE statement | ;

assignment_statement ::= variable ASSIGN expression
                         | variable ASSIGN NEW classId LPAREN RPAREN
                         | variable ASSIGN IN PERIOD NEXTINT LPAREN RPAREN;

expression ::= term expression binary_operator expression ;

binary_operator ::= AND | OR | EQ | PLUS | MINUS | TIMES | DIVIDE | ASSIGN ;

expression_list ::= expression expression_listList ;

expression_listList ::= COMMA expression_list expression_listList | ;

term ::= primary_expression | unary_operator term;

unary_operator ::= NOT ;

primary_expression ::= object | INTEGER | TRUE | FALSE | LPAREN expression RPAREN ;

object ::= variable | function_call ;

function_call ::= objectOption functionId LPAREN expressionListOption RPAREN ;

objectOption ::= object PERIOD | ;

expressionListOption ::= expression_list | ;

functionId ::= ID ;

objectId ::= ID ;

classId ::= ID ;
