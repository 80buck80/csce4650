import java_cup.runtime.*;

terminal IMPORT;
terminal JAVA;
terminal CLASS;
terminal STATIC;
terminal RETURN;
terminal PUBLIC;
terminal NEW;
terminal INT;
terminal SCANNER;
terminal IN;
terminal SYSTEM;
terminal VOID;
terminal MAIN;
terminal STRING;
terminal ARGS;
terminal BOOLEAN;
terminal IF
terminal ELSE;
terminal WHILE;
terminal OUT;
terminal PRINTLN;
terminal NEXTINT;
terminal TRUE;
terminal FALSE;
terminal THIS;
terminal NE;
terminal LE;
terminal GE;
terminal LT;
terminal GT;
terminal AND;
terminal OR;
terminal COMMENT;
terminal EQ;
terminal SEMICOLON;
terminal LCURLBRACKET;
terminal RCURLBRACKET;
terminal LSQRBRACKET;
terminal RSQRBRACKET;
terminal LPAREN;
terminal RPAREN;
terminal ASSIGN;
terminal PERIOD;
terminal COMMA;
terminal PLUS;
terminal MINUS;
terminal TIMES;
terminal DIVIDE;
terminal NOT;
terminal ID;
terminal INTEGER;
terminal UTIL;
terminal ASTERISK;

non terminal program;
non terminal class-definition;
non terminal class-definitionList;
non terminal member-list;
non terminal member-listList;
non terminal member-declaration;
non terminal member-declarationList;
non terminal staticOption;
non terminal member-declarator;
non terminal function-definition;
non terminal function-declaration;
non terminal main-declaration;
non terminal type;
non terminal argument-declaration-list;
non terminal argument-declaration;
non terminal compound-statement;
non terminal statement-list;
non terminal statement;
non terminal assignment-statement;
non terminal expression;
non terminal expression-list;
non terminal term;
non terminal primary-expression;
non terminal object;
non terminal variable;
non terminal function-call;
non terminal classId;
non terminal objectId;
non terminal functionId;


start with program;

program ::= IMPORT JAVA PERIOD UTIL PERIOD ASTERISK SEMICOLON class-definitionList ;

class-definitionList := class-definition | class-definitionList class-definition ;

class-definition ::= CLASS classId LCURLBRACKET member-listList RCURLBRACKET ;

member-listList := member-list | member-listList member-list

member-list ::= member-declaration member-declarationList ;

member-declarationList := member-declaration | member-declarationList member-declaration ;

member-declaration ::= member-declarator SEMICOLON | function-definition ;

member-declarator ::= staticOption variable-declaration ;

staticOption := STATIC | ;




function-definition ::= function-declaration {
                        { variable-declaration ;}
                        [statement-list]
                        [return expression ;] }


function-declaration ::= public [static] type function-identifier
( [argument-declaration-list] )
| main-declaration
variable-declaration ::= type object-identifier [ { [ ] } = new int [ integer ] { [ integer ] } ]
main-declaration ::= [static Scanner in = new Scanner ( System . in ) ;]
public static void main ( String args [ ] )
type ::= class-identifier | int | boolean
argument-declaration-list ::= argument-declaration {, argument-declaration}
argument-declaration :== type object-identifier { [ ] }
compound-statement ::= { statement-list }
statement-list ::= statement {statement}
statement ::= compound-statement
| assignment-statement ;
| if ( expression ) statement [else statement]
| while ( expression ) statement
| System . out . println ( expression );
assignment-statement ::= variable = expression
| variable = new class-identifier ()
| variable = in . nextInt ()
expression ::= term | expression binary-operator expression
expression-list ::= expression {, expression}
term ::= primary-expression | unary-operator term
primary-expression ::= object | integer | true | false | ( expression )
object ::= variable | function-call
variable ::= this | [object .] object-identifier {[ expression ]}
function-call ::= [object .] function-identifier ( [expression-list] )
