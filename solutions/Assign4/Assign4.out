Script started on Sun 08 Apr 2018 05:03:48 PM CDT
brb0164@faculty% java -cp .:java-cup-11a-runtime.jar TinyJavaPars < Test1.java
Source Program
--------------

// Test1.java

import java.util.*;

class Test1 {

  public static void main (String args []) {
    int my_list [] = new int [100]; 
    int my_list_tl [] = new int [100];
    int r; int h; int i;
    {
      r = 2;
      while (r < 5) {  
        my_list [r - 2] = r;
        r = r + 1;
      }  
      h = my_list [0];
      i = r;
      while (i > 0) {
	my_list_tl [i - 1] = my_list [i];
	i = i - 1;
      }
    }
    System . out . println (h); 
    System . out . println (my_list_tl [0]);
  }
}
brb0164@faculty% java -cp .:java-cup-11a-runtime.jar TinyJavaPars < Test2.java
Source Program
--------------

// Test2.java

// This program tests non-local referencing.

import java.util.*;

class Test2 {

  static int h;  // non-local variable

  public static int area (int x, int y) {
    int z;
    z = 2 * (x * y + (x * h) + y * h);
    return z;
  }

  static Scanner in = new Scanner (System . in);

  public static void main (String args []) {
    int a; int b; int s;
    {
      a = in . nextInt ();
      b = in . nextInt ();
      h = in . nextInt ();
      s = area (a, b);
    }
    System . out . println (s);
  }

}
brb0164@faculty% java -cp .:java-cup-11a-runtime.jar TinyJavaPars < Test3.java
Source Program
--------------

// Test3.java

import java.util.*;

// This program tests recursive functions.

class Test3 {

  public static int facto (int x) {
    int s;
    if (x == 1)
      s = 1;
    else
      s = x * facto (x - 1);
    return s;
  }

  static Scanner in = new Scanner (System . in);

  public static void main (String args []) {
    int i; int fac;
    {
      i = in . nextInt ();
      fac = facto (i);
    }
    System . out . println (fac);
  }
}

brb0164@faculty% java -cp .:java-cup-11a-runtime.jar TinyJavaPars < Test4.java
Source Program
--------------

// Test4.java

import java.util.*;

// This program tests arrays passed as parameters.

class Test4 {

  public static int f (int a [], int i) {
    int x;
    x = a [i];
    a [i] = 0;
    i = 622;
    return x;
  }

  public static void main (String args []) {
    int b [] = new int [100];
    int i; int n;
    n = 40;
    i = 0;
    while (i < 100) {
      b [i] = i * i;
      i = i + 1;
    }
    System . out . println (n);
    System . out . println (f (b, n));
    System . out . println (n);		// n should be unchanged
    System . out . println (b [n]);	// b [n] should be 0
  }

}
brb0164@faculty% java -cp .:java-cup-11a-runtime.jar TinyJavaPars < Test5.java
Source Program
--------------

// Test5.java

import java.util.*;

// This program tests class definitions. 

class List {

  int length;
  int max;
  int list [] = new int [100];

  public int initialize (int n) {
    int flag;
    int i;
    max = 100;
    if (n <= 0 || n > max)
      flag = 0;
    else 
      flag = n;
    return flag;
  }

  public int length () { return this . length; }

  public boolean nil () { 
    boolean nul;
    if (length > 0)
      nul = false; 
    else
      nul = true;
    return nul;
  }

  public List cons (int a) {
    int i;
    List cons_list;
    cons_list = new List ();
    cons_list . length = cons_list . initialize (this . length + 1);
    if (cons_list . length == 0)
      cons_list = this;
    else {
      cons_list . list [0] = a;
      i = 0;
      while (i < this . length) {
	cons_list . list [i + 1] = this . list [i];
	i = i + 1;
      }
    }
    return cons_list;
  }

  public int head () { 
    int head;
    if (length == 0) 
      head = 0;
    else
      head = list [0];
    return head;
  }

  public List tail () {
    int i;
    List tail_list;
    tail_list = new List ();
    i = tail_list . initialize (this . length - 1);
    while (i > 0) {
      tail_list = tail_list . cons (this . list [i]);
      i = i - 1;
    }
    return tail_list;
  }

  public boolean equals (List list2) {
    boolean equals;
    int i;
    if (this . length != list2 . length)
      equals = false;
    else {
      equals = true;
      i = 0;
      while (i < length && this . list [i] == list2 . list [i])
	i = i + 1;
      if (i < length) equals = false;
    }
    return equals;
  }

  public int print () {
    int i;
    System . out . println (88888);
    i = 0;
    while (i < length) {
      System . out . println (list [i]);
      i = i + 1;
    }
    System . out . println (88888);
    return length;
  }

}
      
class Test5 {

  public static void main (String args []) {
    int i; 
    List l1; List l2;
    List my_list;
    my_list = new List ();
    System . out . println (my_list . nil ());
    i = my_list . initialize (20);
    i = 10;
    while (i > 0) {
      my_list = my_list . cons (i);
      i = i - 1;
    }
    i = my_list . print ();
    if (my_list . nil ())
      System . out . println (1);
    else
      System . out . println (0);
    System . out . println (my_list . length ());
    System . out . println (my_list . head ());
    i = my_list . tail () . print ();
    l1 = my_list . cons (0);    
    l2 = my_list . cons (0);
    if (l1 . equals (l2))
      System . out . println (1);
    else 
      System . out . println (0);
    if (my_list . equals (l1)) 
      System . out . println (1);
    else 
      System . out . println (0);
  }

}
brb0164@faculty% java -cp .:java-cup-11a-runtime.jar TinyJavaPars < Test6.java
Source Program
--------------

// Test6.java

import java.util.*;

class Test6 {

  static Scanner in = new Scanner (System . in);

  public static void main (String args []) {
    int q; int r; int x; int y;
    x = in . nextInt ();
    y = in . nextInt ();
    q = 0;
    r = x;
    while (r >= y) {
      q = q + 1;
      r = r - y;
    }
    System . out . println (q);
    System . out . println (r);
  }

}
brb0164@faculty% java -cp .:java-cup-11a-runtime.jar TinyJavaPars < Test7.java
Source Program
--------------

// Test7.java

import java.util.*;

// This class performs matrix multiplication.

class Test7 {

  public static int initializeMatrix (int matrix [][], int n1, int n2) {
    int i; int j;
    i = 0;
    while (i < n1) {
      j = 0;
      while (j < n2) {
        matrix [i][j] = (n1 - i) * (n2 - j);
        j = j + 1;
      }
      i = i + 1;
    }
    return 1;
  }

  public static int printMatrix (int matrix [][], int n1, int n2) {
    int i; int j;
    i = 0;
    while (i < n1) {
      j = 0;
      while (j < n2) {
        System . out . println (matrix [i][j]);
        j = j + 1;
      }
      i = i + 1;
    }
    return 1;
  }

  public static int multiplyMatrix (int a [][], int b [][], int c [][], 
      int n1, int n2, int n3) {
    int i; int j; int k;
    i = 0;
    while (i < n1) {
      j = 0;
      while (j < n3) {
        k = 0;
        c [i][j] = 0;
        while (k < n2) {
          c [i][j] = c [i][j] + a [i][k] * b [k][j];
          k = k + 1;
        }
        j = j + 1;
      }
      i = i + 1;
    }
    return 1;
  }

  public static void main (String args []) {
    int matrixA [][] = new int [4][3]; 
    int matrixB [][] = new int [3][2]; 
    int matrixC [][] = new int [4][2]; 
    int i; 
    i = initializeMatrix (matrixA, 4, 3);
    System . out . println (10431043);
    i = printMatrix (matrixA, 4, 3);
    i = initializeMatrix (matrixB, 3, 2);
    System . out . println (11321132);
    i = printMatrix (matrixB, 3, 2);
    i = multiplyMatrix (matrixA, matrixB, matrixC, 4, 3, 2);
    System . out . println (12421242);
    i = printMatrix (matrixC, 4, 2);
    // example from http://en.wikipedia.org/wiki/Matrix_multiplication
    matrixA [0][0] = 14; matrixA [0][1] =  9; matrixA [0][2] =  3;
    matrixA [1][0] =  2; matrixA [1][1] = 11; matrixA [1][2] = 15;
    matrixA [2][0] =  0; matrixA [2][1] = 12; matrixA [2][2] = 17;
    matrixA [3][0] =  5; matrixA [3][1] =  2; matrixA [3][2] =  3;
    matrixB [0][0] = 12; matrixB [0][1] = 25; 
    matrixB [1][0] =  9; matrixB [1][1] = 10;
    matrixB [2][0] =  8; matrixB [2][1] =  5;
    i = multiplyMatrix (matrixA, matrixB, matrixC, 4, 3, 2);
    System . out . println (12421242);
    i = printMatrix (matrixC, 4, 2);
  }

}
brb0164@faculty% exit

Script done on Sun 08 Apr 2018 05:05:09 PM CDT
